cxx = g++
DEFAULT_CXXFLAGS += -Wall -std=c++11 -ggdb
all: jserve
.PHONY: all

memcheck: jserve
	valgrind --leak-check=full --show-reachable=yes ./jserve


init_listener : init_listener.h init_listener.c logger.hpp
	$(cxx) $(DEFAULT_CXXFLAGS) $(CXXFLAGS) -o init_listener.o -c init_listener.c

spawn_handler: spawn_handler.hpp spawn_handler.cpp backend_manager.hpp logger.hpp
	$(cxx) $(DEFAULT_CXXFLAGS) $(CXXFLAGS) -o spawn_handler.o -c spawn_handler.cpp

configuration: configuration.c configuration.h
	$(cxx) $(DEFAULT_CXXFLAGS) $(CXXFLAGS) -o configuration.o -c configuration.c -DCONFIG_FILE=\"./jserve.conf\"

logger: logger.cpp logger.hpp
	$(cxx) $(DEFAULT_CXXFLAGS) $(CXXFLAGS) -o logger.o -c logger.cpp

backend_manager: backend_manager.hpp backend_manager.cpp plugin_types.h logger.hpp
	$(cxx) $(DEFAULT_CXXFLAGS) $(CXXFLAGS) -o backend_manager.o -c backend_manager.cpp

cate.o : convert_ascii_to_ebcdic.c convert_ascii_to_ebcdic.h
	$(cxx) $(DEFAULT_CXXFLAGS) $(CXXFLAGS) -o cate.o -c convert_ascii_to_ebcdic.c

BACKEND_DIR := backend_plugins
$(BACKEND_DIR)/default_backend: $(BACKEND_DIR)/default_backend.cpp logger.hpp
	$(cxx) $(DEFAULT_CXXFLAGS) $(CXXFLAGS) -o $(BACKEND_DIR)/default_backend.so $(BACKEND_DIR)/default_backend.cpp -fpic -shared

# no_extension_backend: $(BACKEND_DIR)/no_extension_backend.cpp logger.hpp
#	$(cxx) $(DEFAULT_CXXFLAGS) $(CXXFLAGS) -o $(BACKEND_DIR)/no_extension_backend.so $(BACKEND_DIR)/no_extension_backend.cpp -fpic -shared

.PHONY: clean
clean: $(BACKEND_DIR)
	rm -v *.o jserve
	rm -v $(BACKEND_DIR)/*.so


jserve: spawn_handler.cpp init_listener.c main.c configuration.c $(BACKEND_DIR)/default_backend backend_manager.cpp logger.cpp
	$(cxx) $(DEFAULT_CXXFLAGS) $(CXXFLAGS) -o jserve main.c spawn_handler.o init_listener.o configuration.o backend_manager.o logger.o -pthread -rdynamic -ldl
